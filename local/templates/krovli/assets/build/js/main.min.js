"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function startOnSpecificBrowserInit() {
  var e,
    i = window.navigator.userAgent.toLowerCase();
  switch (!0) {
    case i.indexOf("edge") > -1:
      e = "msEdge";
      break;
    case i.indexOf("edg/") > -1:
      e = "chrEdge";
      break;
    case i.indexOf("opr") > -1 && !!window.opr:
      e = "opera";
      break;
    case i.indexOf("chrome") > -1 && !!window.chrome:
      e = "сhrome";
      break;
    case i.indexOf("trident") > -1:
      e = "ie";
      break;
    case i.indexOf("firefox") > -1:
      e = "firefox";
      break;
    case i.indexOf("safari") > -1:
      e = "safari";
      break;
    default:
      e = "other";
  }
  "safari" != e && "firefox" != e || adaptiveSizePageScaleInit();
}
var blocks = document.querySelectorAll(".scroll");
var _iterator = _createForOfIteratorHelper(blocks),
  _step;
try {
  var _loop2 = function _loop2() {
    var e = _step.value;
    e.addEventListener("mousemove", function (i) {
      var t = i.currentTarget,
        n = Math.min(1, i.clientX / t.clientWidth);
      e.scrollLeft = (t.scrollWidth - t.clientWidth) * n;
    });
  };
  for (_iterator.s(); !(_step = _iterator.n()).done;) {
    _loop2();
  }
} catch (err) {
  _iterator.e(err);
} finally {
  _iterator.f();
}
window.addEventListener("load", function (e) {
  var i = document.querySelectorAll(".actual-btn");
  var _iterator2 = _createForOfIteratorHelper(i),
    _step2;
  try {
    var _loop = function _loop() {
      var e = _step2.value;
      var i = e.nextElementSibling;
      e.addEventListener("change", function (e) {
        console.log("test");
        var t = "";
        t = this.files[0].name, console.log(i.querySelector(".file-chose")), i.querySelector(".file-chose").style.display = "none", i.querySelector(".file-chosen").style.display = "inline-block", i.querySelector(".file-chosen").textContent = t;
      });
    };
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      _loop();
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
});
var swiper1 = new Swiper(".swiperCertificates", {
    slidesPerView: 5,
    spaceBetween: 15,
    pagination: {
      el: ".swiper-pagination",
      clickable: !0
    },
    navigation: {
      nextEl: ".swiperCertificates__button-next",
      prevEl: ".swiperCertificates__button-prev"
    },
    breakpoints: {
      360: {
        slidesPerView: 1,
        spaceBetween: 5
      },
      744: {
        slidesPerView: 3,
        spaceBetween: 10
      },
      1400: {
        slidesPerView: 5,
        spaceBetween: 10
      },
      1920: {
        slidesPerView: 5,
        spaceBetween: 15
      }
    }
  }),
  swiper2 = new Swiper(".swiperPortfolio", {
    slidesPerView: 2,
    spaceBetween: 50,
    pagination: {
      el: ".swiper-pagination",
      clickable: !0
    },
    navigation: {
      nextEl: ".swiperPortfolio__button-next",
      prevEl: ".swiperPortfolio__button-prev"
    },
    breakpoints: {
      360: {
        slidesPerView: 1,
        spaceBetween: 5
      },
      744: {
        slidesPerView: 1,
        spaceBetween: 5
      },
      1400: {
        slidesPerView: 2,
        spaceBetween: 36
      },
      1920: {
        slidesPerView: 2,
        spaceBetween: 50
      }
    }
  });